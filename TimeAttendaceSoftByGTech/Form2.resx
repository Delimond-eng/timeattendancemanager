<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pduGsvIIUu3DWXkEKXbhrLyCFLtw1l5BZXbhrLyCFLtw1l5BCl24aykOGNMJu7u7u7u7u7u7v5vpbu7u
        7u/m4nd3d3d3d3d3d3d3d0AAAIA/sH//2gAMAwEAAgADAAAAEPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PIPPHHMMPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOIPPPPPPPLHNPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPOBPPPPPPPPPPCPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPDPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPLFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PLPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOFPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPLPP
        PPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPOPPPPPPPPPPPPPPPPHPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPNPPPPPPPPPPPPPPPHPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPLPPPPPPPPPPP
        PPPHPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPDPPPPPPPPPPPPBPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPCNPPPPPPPPONPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPDNNPPPPPNFPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPDMEHHPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPMMFHLHLDPDNONPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMLPPPPPPPPP
        PPPPDKMPPPPPPPPPPPPPPPPPPPPPPPPPPOBHPPPPPPPPPPPPPPPPPCPPPPPPPPPPPPPPPPPPPPPPPPOD
        PPPPPPPPPPPPPPPPPPPPKNPPPPPPPPPPPPPPPPPPPPPPDPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPP
        PPPPPPPPPJPPPPPPPPPPPPPPPPPPPPPPPPCPPPPPPPPPPPPPPPPPPPLPPPPPPPPPPPPPPPPPPPPPPPPP
        PFPPPPPPPPPPPPPPPPPPJPPPPPPPPPPPPPPPPPPPPPPPPPPMPPPPPPPPPPPPPPPPPPEPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPAPPPPPPPPPPPPPPPPPPPPPPPPPPHPPPPPPPPPPPPPPPPPPAP
        PPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPAPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPAPPPPPPPPPPPPPPPPPPPPPPPPPPHPPPPPPPPPPPPPPPPPPAPPPPPPPPPPPPPPPPPPPPPPP
        PPPNPPPPPPPPPPPPPPPPPPDDDDDDDDDDHDDDDDDDDDDDLDDDDHPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP/8QAFBEB
        AAAAAAAAAAAAAAAAAAAAoP/aAAgBAwEBPxBU3//EABQRAQAAAAAAAAAAAAAAAAAAAKD/2gAIAQIBAT8Q
        VN//xAArEAEAAAMHAwQDAQEBAAAAAAABABExIUFQUWFx8YGh8EBgkdGxweEwgBD/2gAIAQEAAT8Q/wCm
        VAmoGbE9J/JTdo7esn5i8PhpDc9dQX/zoa58NI/TUxKBpdFqgBTPaM9AfGZROPCAuhmekNj4/wAdQOSI
        koNb+QhsUzofDSBmTKezJptNLRdInLTLna7sNrr/ALLB1NOmUSve2uzf7JUBVkEElFG4Ns94tobKTX0I
        ozLEhRDSKtzMgWKTA2PsYoRpqoEMrby536aeltqXW1HUyYnF35HJ9iBkFNWgQ9ZVYfm+nELN2T7B9x3x
        iHJ9hzO3Nlf+j1Myqtj+w1guApovPYLWSO0eFvq5RbubbnL2AjtlOWekOJN57aerSCIGYl0GslE1z64/
        Mpk17cetkKV0PJx53LQobCbF19dNRMOuY7NxK0bPD18/HcR/PxjsvGwddX173cM9mxjamNrIm0IZe2e9
        8AzlBd5Y3qEO2AyHf3j+43MmcvyywGfrn5D6xuz4KMBdjo/GNno12YDKTMfjG5UVmcBmpfuwY3PyjfIh
        mVVJwCS2vcs8csMkWWzb6968YOsEJQvgY5IQsbeKdvXzIk7V0p3x2Vqfzh/PXyu0Gx/celcSTpvrQmmQ
        QP0iDHpvOWKV949b1en939ewJxbB0G89XYoDb8gxIvGQ9gFBZReVzEjc/R1PUkzUSAvYs3G0WWnsKUgF
        vaMNiVINR9RSiLW7m6+xHkkVjccn7hITpKqelvsiezut2r9exqcCWBXR0h+oqNyZj6NmqSAmsSMVJUfd
        9kKSXWZs3Q9NHbYfIX+haMxjZ0zi3TWofXsueOe0fkviYSfudSEUiIlR/wBHRZtJ/YXLJtsSHSAAAJBc
        ezjbb0SfmJg6SzPmJ5Is/wBTCPW1y+YRVom5E4mZwW0th75lYk9DMCKb0n9sSdYdd7V7rQYVqm/1QFQv
        LKO24CCyn/BSyJthrHfUMVBer8IpW0cFpsB9wKr3QhuF6fqODfUcG+oLz4f1CqPZGG13A+4rW8YoAdX5
        R2tDAgmpmlvsmZSCXDN2iciebYiaynWailNkT8IZnvI/7qz3UIr3MpfyiRy3S1Fnr5liJFMLcpu8FpMp
        7AundE4DHWRPw+bN8Q+yVunI+D1LpJcpzPhiWg919RKCZ+JpAzJlpjbczqkgif6/Wf1CjLev4ufK3wiQ
        aX2/Ygw90SY4u2E2kOhAsmPcviYCLhYOmB6yrUO5EoI9mb9QIgjMbzFGJhcK7CF1XMrXdwdonzkps3Rb
        9yq9wxJXJQsu6mHZPndoYTftEP3BSWBbc1H1iDJBC1qf1ClFTVbXCySoWiNpBlQGygf1hwTkTs05wzKi
        atVw1IIiWiXQJiBscue+GSmlWZj9QjhM1cPfcmYlzAWwWGQ57YUpYCatxFo02gYjPkXuoBYGIXmE6GQX
        XDridZaqyvMIUaTk6EVOJ0si4xOnoBrpDQTMMHmaonZa4rM1UG7+4PLxsHXVxWezIVfrvgzZWkIzVnfF
        VrI+6BAJRtMF0AbsxOduduLTOqp2wXzGTFDbFWjHgssF8xkxQ2xVox4LLBfMZMUNsVaMeCywXzGTFBti
        rRjwWWC+YyYobYq0Y8llgvmMmKG2KtGPBZYL5jJihtirRjwWWC+YyYobYq0jyWWC+YyYKNsVaMeCywXz
        GTFDbFWjHgssF8xkxQ2xVox5LLBQQJokmZHBRwUcFHBRwUcFHBRwUcFHBRwUcFHBRwUcFHBRwUcFHBf+
        E4KOCjgo4KOCjgo4KOCjgv8AwnBRwUcFHBRwUcFHBRwUcFHBRwUcFHBRwUcFHBRwUcFHBRwUcFHBRwUc
        FBlgJAXH/Qf/2Q==
</value>
  </data>
</root>